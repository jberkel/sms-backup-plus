<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
          package="com.zegoggles.smssync"
          android:description="@string/app_description">

    <!-- “dangerous” permissions -->

    <!-- android.permission-group.MESSAGES -->
    <uses-permission android:name="android.permission.READ_SMS"/>
    <uses-permission android:name="android.permission.WRITE_SMS"/>
    <uses-permission android:name="android.permission.SEND_SMS" />


    <!-- Allows the app to receive and process SMS messages. This means the app could monitor or delete
         messages sent to your device without showing them to you. -->
    <!-- android.permission-group.MESSAGES -->
    <uses-permission android:name="android.permission.RECEIVE_SMS"/>
    <uses-permission android:name="android.permission.RECEIVE_MMS" />

    <!-- android.permission-group.SOCIAL_INFO -->
    <!-- introduced in API level 16 (Jelly Bean), previously part of READ_CONTACTS -->
    <uses-permission android:name="android.permission.READ_CALL_LOG"/>
    <uses-permission android:name="android.permission.WRITE_CALL_LOG"/>

    <!-- android.permission-group.SOCIAL_INFO -->
    <uses-permission android:name="android.permission.READ_CONTACTS"/>
    <uses-permission android:name="android.permission.WRITE_CONTACTS"/>

    <!-- android.permission-group.PERSONAL_INFO -->
    <uses-permission android:name="android.permission.READ_CALENDAR"/>
    <uses-permission android:name="android.permission.WRITE_CALENDAR"/>

    <!-- Allows the app to get the list of accounts known by the phone. This may include any accounts
         created by applications you have installed. -->
    <!-- android.permission-group.ACCOUNTS -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS"/>

    <!-- Allows the app to request authentication tokens. Removed in Android 6 -->
    <!-- android.permission-group.ACCOUNTS -->
    <uses-permission android:name="android.permission.USE_CREDENTIALS"
                     android:maxSdkVersion="22"/>

    <!-- Allows the app to write to the SD card.
         Beginning with Android 4.4 (API level 19), it's no longer necessary for your app to request the
         WRITE_EXTERNAL_STORAGE permission when your app wants to write to its own application-specific directories
         on external storage
    -->
    <!-- android.permission-group.STORAGE -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
                     android:maxSdkVersion="18"/>

    <!-- Allows the app to create network sockets and use custom network protocols. The browser and
         other applications provide means to send data to the internet, so this permission is not
         required to send data to the internet. -->
    <!-- android.permission-group.NETWORK -->
    <uses-permission android:name="android.permission.INTERNET"/>

    <!-- Allows the app to view information about network connections such as which networks
         exist and are connected. -->
    <!-- android.permission-group.NETWORK -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>

    <!-- Allows the app to view information about Wi-Fi networking, such as whether Wi-Fi is enabled
         and name of connected Wi-Fi devices. -->
    <!-- android.permission-group.NETWORK -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>

    <!-- Allows the app to prevent the phone from going to sleep. -->
    <!-- android.permission-group.AFFECTS_BATTERY -->
    <uses-permission android:name="android.permission.WAKE_LOCK"/>

    <!-- Allows the app to have itself started as soon as the system has finished booting.
         This can make it take longer to start the phone and allow the app to slow down the overall phone
         by always running. -->
    <!-- android.permission-group.APP_INFO -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>

    <!-- Apps wanting to use foreground services must now request the FOREGROUND_SERVICE permission first. -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>

    <uses-feature android:name="android.hardware.telephony" android:required="false"/>
    <uses-feature android:name="android.hardware.wifi" android:required="false"/>

    <supports-screens android:smallScreens="true"/>

    <application android:icon="@drawable/ic_sms_backup"
                 android:label="@string/app_name"
                 android:description="@string/app_description"
                 android:theme="@style/SMSBackupPlusTheme.Light"
                 android:name="App"
                 android:allowBackup="true"
                 android:debuggable="false"
                 android:fullBackupContent="@xml/backup_descriptor">

        <activity android:name=".activity.MainActivity" android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".activity.auth.OAuth2WebAuthActivity"/>

        <!-- launchMode=singleTask:
            The system creates the activity at the root of a new task and routes the intent to it.
            However, if an instance of the activity already exists, the system routes the intent to existing
            instance through a call to its onNewIntent() method, rather than creating a new one. -->
        <activity android:name=".activity.auth.RedirectReceiverActivity" android:launchMode="singleTask">
            <!-- handle oauth browser callbacks (legacy auth support) -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW"/>
                <action android:name="android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.BROWSABLE"/>
                <data android:scheme="com.zegoggles.smssync" android:path="/oauth2redirect"
                      tools:ignore="GoogleAppIndexingUrlError"/>
            </intent-filter>
        </activity>

        <activity android:name=".activity.auth.AccountManagerAuthActivity"/>
        <activity android:name=".activity.donation.DonationActivity"/>

        <service android:name=".service.SmsBackupService" android:exported="false"/>
        <service android:name=".service.SmsRestoreService" android:exported="false"/>
        <service android:name=".service.SmsJobService" android:exported="false">
            <intent-filter>
                <action android:name="com.firebase.jobdispatcher.ACTION_EXECUTE"/>
            </intent-filter>
        </service>

        <receiver android:name=".receiver.SmsBroadcastReceiver"
                  android:enabled="true"
                  android:permission="android.permission.BROADCAST_SMS">
            <intent-filter>
                <action android:name="android.provider.Telephony.SMS_RECEIVED"/>
            </intent-filter>
        </receiver>

        <receiver android:name=".receiver.BootReceiver" android:enabled="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
            </intent-filter>
        </receiver>

        <receiver android:name=".receiver.PackageReplacedReceiver" android:enabled="true">
            <intent-filter>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED"/>
            </intent-filter>
        </receiver>

        <receiver android:name=".receiver.BackupBroadcastReceiver" android:enabled="true" tools:ignore="ExportedReceiver">
            <intent-filter>
                <action android:name="com.zegoggles.smssync.BACKUP"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>

        <!-- BroadcastReceiver that listens for incoming SMS messages -->
        <receiver android:name=".compat.SmsReceiver"
                android:permission="android.permission.BROADCAST_SMS">
            <intent-filter>
                <action android:name="android.provider.Telephony.SMS_DELIVER" />
            </intent-filter>
        </receiver>

        <!-- BroadcastReceiver that listens for incoming MMS messages -->
        <receiver android:name=".compat.MmsReceiver"
            android:permission="android.permission.BROADCAST_WAP_PUSH">
            <intent-filter>
                <action android:name="android.provider.Telephony.WAP_PUSH_DELIVER" />
                <data android:mimeType="application/vnd.wap.mms-message" />
            </intent-filter>
        </receiver>

        <!-- Activity that allows the user to send new SMS/MMS messages -->
        <activity android:name=".compat.ComposeSmsActivity" >
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <action android:name="android.intent.action.SENDTO" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="sms" />
                <data android:scheme="smsto" />
                <data android:scheme="mms" />
                <data android:scheme="mmsto" />
            </intent-filter>
        </activity>

        <!-- Service that delivers messages from the phone "quick response" -->
        <service android:name=".compat.HeadlessSmsSendService"
                 android:permission="android.permission.SEND_RESPOND_VIA_MESSAGE"
                 android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.RESPOND_VIA_MESSAGE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:scheme="sms" />
                <data android:scheme="smsto" />
                <data android:scheme="mms" />
                <data android:scheme="mmsto" />
            </intent-filter>
        </service>

        <meta-data
            android:name="com.google.android.backup.api_key"
            android:value="@string/backup_api_key"/>
    </application>
</manifest>
